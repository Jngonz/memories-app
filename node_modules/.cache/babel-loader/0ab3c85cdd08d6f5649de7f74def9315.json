{"ast":null,"code":"import _objectSpread from\"/home/jose/Portfolio/memories-part-4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/jose/Portfolio/memories-part-4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import FileBase from'react-file-base64';import{useDispatch,useSelector}from'react-redux';import{useHistory}from'react-router-dom';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.posts.find(function(p){return p._id===currentId;}):null;});var classes=useStyles();var dispatch=useDispatch();var user=JSON.parse(localStorage.getItem('profile'));var history=useHistory();useEffect(function(){if(post)setPostData(post);},[post]);var clear=function clear(){setCurrentId(null);setPostData({title:'',message:'',tags:'',selectedFile:''});};var handleSubmit=function handleSubmit(e){e.preventDefault();if(currentId){var _user$result;dispatch(updatePost(currentId,_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result=user.result)===null||_user$result===void 0?void 0:_user$result.name})));}else{var _user$result2;dispatch(createPost(_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result2=user.result)===null||_user$result2===void 0?void 0:_user$result2.name}),history));}clear();};if(!user){return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Please Sign In to create your own memories.\"})});}return/*#__PURE__*/_jsx(Paper,{className:classes.paper,elevation:6,children:/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a Memory\"]}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,multiline:true,rows:4,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags (coma separated)\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref2){var base64=_ref2.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});}export default Form;","map":{"version":3,"sources":["/home/jose/Portfolio/memories-part-4/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useHistory","useStyles","createPost","updatePost","Form","currentId","setCurrentId","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nfunction Form({ currentId, setCurrentId }) {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((p) => p._id === currentId) : null));\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n    } else {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n    }\n\n    clear();\n  };\n\n  if (!user) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant='h6' align='center'>\n          Please Sign In to create your own memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n\n        {/* Creator */}\n        {/* <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n        /> */}\n\n        {/* Title */}\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n\n        {/* Message */}\n        <TextField\n          name='message'\n          variant='outlined'\n          label='Message'\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n\n        {/* Tags */}\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags (coma separated)'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n\n        {/* Image File */}\n        <div className={classes.fileInput}>\n          <FileBase type='file' multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n        </div>\n\n        {/* Submit Button */}\n        <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>\n          Submit\n        </Button>\n\n        {/* Clear Button */}\n        <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}