{"ast":null,"code":"var _jsxFileName = \"/home/jose/Portfolio/memories-part-4/client/src/components/PostDetails/PostDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = () => {\n  _s();\n\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: 'none',\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(',')\n      }));\n    }\n  }, [post]);\n  if (!post) return null; //const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"7em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      borderRadius: '15px'\n    },\n    elevation: 6,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          component: \"p\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Created by: \", post.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Realtime Chat - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Comments - coming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageSection,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.media,\n          src: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetails, \"tI7gvGJS3PURxKF89lAkjzOuqto=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useStyles, useParams];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/home/jose/Portfolio/memories-part-4/client/src/components/PostDetails/PostDetails.js"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useParams","useHistory","getPost","getPostsBySearch","useStyles","PostDetails","post","posts","isLoading","state","dispatch","history","classes","id","search","tags","join","loadingPaper","recommendedPosts","filter","_id","padding","borderRadius","card","section","title","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst PostDetails = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  //const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size='7em' />\n      </Paper>\n    );\n  }\n\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant='h3' component='h2'>\n            {post.title}\n          </Typography>\n          <Typography gutterBottom variant='h6' color='textSecondary' component='h2'>\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant='body1' component='p'>\n            {post.message}\n          </Typography>\n          <Typography variant='h6'>Created by: {post.name}</Typography>\n          <Typography variant='body1'>{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant='body1'>\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant='body1'>\n            <strong>Comments - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {/* {!!recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant='h5'>\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n              <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                <Typography gutterBottom variant='h6'>\n                  {title}\n                </Typography>\n                <Typography gutterBottom variant='subtitle2'>\n                  {name}\n                </Typography>\n                <Typography gutterBottom variant='subtitle2'>\n                  {message}\n                </Typography>\n                <Typography gutterBottom variant='subtitle1'>\n                  Likes: {likes.length}\n                </Typography>\n                <img src={selectedFile} width='200px' />\n              </div>\n            ))}\n          </div>\n        </div>\n      )} */}\n    </Paper>\n  );\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}