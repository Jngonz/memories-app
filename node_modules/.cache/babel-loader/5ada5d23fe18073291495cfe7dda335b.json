{"ast":null,"code":"import axios from'axios';// DEVELOPMENT baseURL\n// const API = axios.create({ baseURL: 'http://localhost:5000' });\n// PRODUCTION baseURL\nvar API=axios.create({baseURL:'https://memoriesforlife.herokuapp.com/'});API.interceptors.request.use(function(req){if(localStorage.getItem('profile')){req.headers.Authorization=\"Bearer \".concat(JSON.parse(localStorage.getItem('profile')).token);}return req;});// Post\nexport var fetchPost=function fetchPost(id){return API.get(\"/posts/\".concat(id));};export var fetchPosts=function fetchPosts(page){return API.get(\"/posts?page=\".concat(page));};export var fetchPostsBySearch=function fetchPostsBySearch(searchQuery){return API.get(\"/posts/search?searchQuery=\".concat(searchQuery.search||'none',\"&tags=\").concat(searchQuery.tags));};export var createPost=function createPost(newPost){return API.post('/posts',newPost);};export var updatePost=function updatePost(id,updatedPost){return API.patch(\"/posts/\".concat(id),updatedPost);};export var deletePost=function deletePost(id){return API.delete(\"/posts/\".concat(id));};export var likePost=function likePost(id){return API.patch(\"/posts/\".concat(id,\"/likePost\"));};// Users\nexport var signIn=function signIn(formData){return API.post('/user/signin',formData);};export var signUp=function signUp(formData){return API.post('/user/signup',formData);};","map":{"version":3,"sources":["/home/jose/Portfolio/memories-part-4/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","updatePost","updatedPost","patch","deletePost","delete","likePost","signIn","formData","signUp"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AAEA;AACA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CAAEC,OAAO,CAAE,wCAAX,CAAb,CAAZ,CAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,GAAD,CAAS,CACpC,GAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,CAAqC,CACnCF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,kBAAsCC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAlF,EACD,CAED,MAAOP,CAAAA,GAAP,CACD,CAND,EAQA;AACA,MAAO,IAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,QAAQf,CAAAA,GAAG,CAACgB,GAAJ,kBAAkBD,EAAlB,EAAR,EAAlB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAUlB,CAAAA,GAAG,CAACgB,GAAJ,uBAAuBE,IAAvB,EAAV,EAAnB,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,WAAD,QAAiBpB,CAAAA,GAAG,CAACgB,GAAJ,qCAAqCI,WAAW,CAACC,MAAZ,EAAsB,MAA3D,kBAA0ED,WAAW,CAACE,IAAtF,EAAjB,EAA3B,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAaxB,CAAAA,GAAG,CAACyB,IAAJ,CAAS,QAAT,CAAmBD,OAAnB,CAAb,EAAnB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACX,EAAD,CAAKY,WAAL,QAAqB3B,CAAAA,GAAG,CAAC4B,KAAJ,kBAAoBb,EAApB,EAA0BY,WAA1B,CAArB,EAAnB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACd,EAAD,QAAQf,CAAAA,GAAG,CAAC8B,MAAJ,kBAAqBf,EAArB,EAAR,EAAnB,CACP,MAAO,IAAMgB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAChB,EAAD,QAAQf,CAAAA,GAAG,CAAC4B,KAAJ,kBAAoBb,EAApB,cAAR,EAAjB,CAEP;AACA,MAAO,IAAMiB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,QAAD,QAAcjC,CAAAA,GAAG,CAACyB,IAAJ,CAAS,cAAT,CAAyBQ,QAAzB,CAAd,EAAf,CACP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACD,QAAD,QAAcjC,CAAAA,GAAG,CAACyB,IAAJ,CAAS,cAAT,CAAyBQ,QAAzB,CAAd,EAAf","sourcesContent":["import axios from 'axios';\n\n// DEVELOPMENT baseURL\n// const API = axios.create({ baseURL: 'http://localhost:5000' });\n\n// PRODUCTION baseURL\nconst API = axios.create({ baseURL: 'https://memoriesforlife.herokuapp.com/' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\n// Post\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\n\n// Users\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n"]},"metadata":{},"sourceType":"module"}