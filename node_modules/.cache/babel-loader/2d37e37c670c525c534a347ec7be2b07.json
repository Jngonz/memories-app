{"ast":null,"code":"var _jsxFileName = \"/home/jose/Portfolio/memories-part-4/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form({\n  currentId,\n  setCurrentId\n}) {\n  _s();\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear(); // if (currentId) {\n    //   dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n    // } else {\n    //   dispatch(createPost({ ...postData, name: user?.result?.name }));\n    // }\n  };\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"lb4lN2uypxsAGzYkvsgzntrCab0=\", false, function () {\n  return [useSelector, useStyles, useDispatch, useHistory];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/jose/Portfolio/memories-part-4/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useHistory","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nfunction Form({ currentId, setCurrentId }) {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((p) => p._id === currentId) : null));\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n    }\n    clear();\n    // if (currentId) {\n    //   dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n    // } else {\n    //   dispatch(createPost({ ...postData, name: user?.result?.name }));\n    // }\n  };\n\n  if (!user) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant='h6' align='center'>\n          Please Sign In to create your own memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n\n        {/* Creator */}\n        {/* <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n        /> */}\n\n        {/* Title */}\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n\n        {/* Message */}\n        <TextField\n          name='message'\n          variant='outlined'\n          label='Message'\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n\n        {/* Tags */}\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags (coma separated)'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n\n        {/* Image File */}\n        <div className={classes.fileInput}>\n          <FileBase type='file' multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n        </div>\n\n        {/* Submit Button */}\n        <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>\n          Submit\n        </Button>\n\n        {/* Clear Button */}\n        <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}